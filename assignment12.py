#QUESTION 1
#ACCESS TOKEN:-
#An access token is an object that describes the security context of a process or thread.
#The information in a token includes the identity and privileges of the user account associated with the process or thread.
#A token is used to make security decisions and to store tamper-proof information about some system entity.
#An access token is generated by the logon service when a user logs on to the system and the credentials provided by the user are authenticated against the authentication database.
#The authentication database contains credential information required to construct the initial token for the logon session, including its user id, primary group id, all other groups it is part of, and other information.

#ACCESS TOKEN:- "715235391847026689-GXMz2QvUaoHP7Lt0f5MVwcfyMz1zEiG"


#QUESTION 2
import socket
addr1=socket.gethostbyname('google.com')
addr2=socket.gethostbyname('facebook.com')
print(addr1,addr2)

#QUESTION 3
import tweepy
consumer_key="ZZjW3ALant6KwaXM07QU7O9ux"
consumer_secret="eKTWZyMJsAdqAcedUZt0kU5oPDOZVnG8L6ZTNiovx41ZknGMJg"
access_token="715235391847026689-GXMz2QvUaoHP7Lt0f5MVwcfyMz1zEiG"
access_secret="M5kmdm2B3acIKCCm9NQ8w32Ru2BUxQ5zDu3CwNIDwp5Pw"
oauth= tweepy.OAuthHandler(consumer_key,consumer_secret)
oauth.set_access_token(access_token,access_secret)
api=tweepy.API(oauth)
print(api.search("#krishna"))

#QUESTION 4
#API is a part of library which defines how an application communicates with external code.
#API can be written in any language
#Library is written in same language which is a collection of all the functionalities required for the use case.
#An API (application programming interface) is a term meaning the functions/methods in a library that you can call to ask it to do things for you
#library is a collection of functions and methods that allows you to perform lots of actions without writing your own code.


#Example

#Numpy is a library of Python, adding support for large, multi - dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays.

#QUESTION 5


import sendgrid
import os
from sendgrid.helpers.mail import *

sg = sendgrid.SendGridAPIClient(apikey='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')
from_email = Email("balwantrawat333@gmail.com")
to_email = Email("gupta.danish236@gmail.com")
subject = "Sending with SendGrid is Fun"
content = Content("text/plain", "and easy to do anywhere, even with Python")
mail = Mail(from_email, subject, to_email, content)
response = sg.client.mail.send.post(request_body=mail.get())
print(response.status_code)
print(response.body)
print(response.headers)